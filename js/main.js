$( document ).ready(function() {

    // Fade out PHP generated alerts
    $(".alert").fadeTo(3500, 600).slideUp(400, function () {
        $(".alert").slideUp(600);
        $(".alert").remove();
    });


    // BUCKET HANDKERS
    // Clicks on new and future bucket nav items
    $( '#buckets' ).on( 'click', 'li', function( event ) {
      console.log( this );
        fetchBuckets(this);
    });


    // Inject bucket objects
    // which will in turn inject category Objects
    // which will then ibject task objects
    fetchBuckets();


    // CATEGORY HANDLERS
    // EDIT CATEGORY
    $( '#categories' ).on( 'click', 'i.c-edit', function( event ) {
      console.log('Edit category');
       console.log( $(this).attr('data-category-id'));
    });

    // DELETE CATEGORY
    $( '#categories' ).on( 'click', 'i.c-rm', function( event ) {
      console.log('Rm category');
       console.log( $(this).attr('data-category-id') );
    });


    // TASK HANDLERS
    // CREATE TASK
    // $( '#categories' ).on( 'click', 'i.t-add', function( event ) {
    //   console.log('Add task');
    //    console.log( $(this).attr('data-category-id') );
    // });

    // EDIT TASK
    $( '#categories' ).on( 'click', 'i.t-edit', function( event ) {
      console.log('Edit task');
       console.log( $(this).attr('data-task-id'));
    });

    // DELETE TASK
    $( '#categories' ).on( 'click', 'i.t-rm', function( event ) {
      console.log('Rm task');
       console.log( $(this).attr('data-task-id') );
    });


    // DRAGGING 7 DROPPING TASKS
    // Attach Event to Category container for dragging of task rows
    $( '#categories' ).on( 'click', 'li.list-group-item', function( event ) {
      console.log( this );
    });

    // Construct Task objects

    // Attach events to task objects

    // Inject Task Objects into Category containers

    // Inject Category Containers into body


});


/*********************************************************************
** Function: fetchBuckets
** Description: Handler to fetch buckets for the backend and display
**     add them to the bucket container. Set the active class on the
**     currently viewed bucket. Trigger the loading of
**     categories and tasks for this bucket.
** Parameters: alerts object
** Return: none
*********************************************************************/
function fetchBuckets(elem) {

  jQuery.get( "forms/getbuckets.php", function( data ) {

    resp = JSON.parse(data);
    buckets = resp.buckets;

    $('#buckets').empty();

    console.log(resp);

    if (buckets.length > 0 ) {

      var html = '';
      for(i = 0; i < buckets.length; i++) {

        var item = document.createElement("li");
        var link = document.createElement("a");
        var id = 'bucket_' + buckets[i]['bucket_id'];
        var current = '';
        // If nothing was clicked, set the first bucket as default
        if ($.isEmptyObject(elem) && i == 0 ||
            !$.isEmptyObject(elem) && elem.id == id) {

          current = id;
          item.classList.add('active');
          item.setAttribute('data-bucket-id', buckets[i]['bucket_id']);
          $('#bucketTitle').html( buckets[i]['bucket_title']);
          $('#addNewCategory, #rmBucket').attr('data-bucket-id', buckets[i]['bucket_id']);

          // Load categories for the default bucket
          fetchCategories(buckets[i]['bucket_id']);
        }



        // Build nav links and inject into #buckets ul
        item.id = id;
        item.classList.add('nav-item');
        link.classList.add('nav-link');
        link.href='#';
        link.text = buckets[i]['bucket_name'];
        item.appendChild(link);
        $('#buckets').append(item);

      }
    }
    // Append the add bucket item cheaply by using a string
    html +='<li class="nav-item">'
           + '<a class="nav-link" title="Add Bucket" href="#" data-toggle="modal" data-target="#addBucket"><i class="fas fa-folder-plus fa-lg"></i></a></li>';
    $('#buckets').append(html);

    // Handle any alerts that were generated by the backend.
    parseAlerts(resp['messages']);
  });

}



/*********************************************************************
** Function: fetchBuckets
** Description: Handler to fetch buckets for the backend and display
**     add them to the bucket container. Set the active class on the
**     currently viewed bucket. Trigger the loading of
**     categories and tasks for this bucket.
** Parameters: alerts object
** Return: none
*********************************************************************/
function fetchCategories(bucket_id) {

  jQuery.get( "forms/getcattasks.php?bucket_id="+ bucket_id, function( data ) {

    resp = JSON.parse(data);


    console.log('category loop');
    console.log(resp);

    // Create Category containers
    if (resp.categories.length > 0) {
      // For every category, create a container
      for(i = 0; i < resp.categories.length; i++) {
        // for every container, create a container object
        createContainer(resp.categories[i]);
      }
    }

    // Create task objects and put them into the correct category container
    if (resp.tasks.length > 0) {
      // For every category, create a container
      for(i = 0; i < resp.tasks.length; i++) {
        // for every task, add a task object to category container
        createTask(resp.tasks[i]);
      }
    }

    // Handle any alerts that were generated by the backend.
    parseAlerts(resp['messages']);
  });

}


function createContainer(category) {
  category_id = 'category-' + category['category_id'];
  category_name = category['category_name'];
//  console.log(category['category_name']);
  //console.log(category_id);

  var card = '<div class="card bg-light mb-3" id="'+category_id+'">'
            +'  <div class="card-header">'
            +      category_name
            +'     <div class="float-right task-tools">'
            +'      <i class="far fa-plus-square t-add" title="Add Task" data-toggle="modal" data-target="#addTask" data-category-id="'+ category_id +'"></i>'
            +'      <i class="far fa-edit c-edit" title="Edit Category" data-category-id="'+category['category_id']+'"></i>'
            +'      <i class="far fa-trash-alt c-rm" title="Delete category" data-category-id="'+category['category_id']+'"></i>'
            +'    </div>'
            +'  </div>'
            +'  <ul class="list-group list-group-flush" id="'+category_id+'-ul">'
            +'  </ul>'
            +' </div>'
            +'</div>';
  //console.log(card);

  $('#categories').append(card);

}

function createTask(task) {

  category_id = 'category-'+ task['category_id'];
  task_id = 'task-' + task['task_id'];
  // console.log('taskname'+task['task_name']);
  // console.log('catid '+ category_id);
  // console.log('taskid' +task_id);

  var task = '<li class="list-group-item">'+ task['task_name']
    + '<div class="float-right task-tools">'
    + '  <i class="far fa-edit t-edit" title="Edit Task" data-task-id='+task['task_id']+'></i>'
    + '<i class="far fa-trash-alt t-rm" title="Delete Task" data-task-id='+task['task_id']+'></i>'
    + '</div></li>';

  $('#'+ category_id +'-ul').append(task);
}
